scalar DateTime

extend type Query {
  orderSet(input: OrderSetInput!): OrderSet
  groupOrderSets(input: GroupOrderSetsInput!): [OrderSet!]
}

extend type Mutation {
  createOrderSet(input: CreateOrderSetInput!): OrderSet
  updateOrderSet(input: UpdateOrderSetInput!): OrderSet
  deleteOrderSet(input: DeleteOrderSetInput!): OrderSet
}

###################
# Order
###################
type Order @key(fields: "id") {
  id: ID!
  createdAt: DateTime!
  membership: GroupMembership!
  orderSet: OrderSet!
  side: OrderSide!
  orderType: OrderType!
  price: Float
  quantity: Float
  stopPrice: Float
  symbol: String!
  lastTimestamp: DateTime!
}

###################
# OrderSet
###################
type OrderSet @key(fields: "id") {
  id: ID!
  createdAt: DateTime!
  description: String!
  orders: [Order!]!
  orderSide: OrderSide!
  orderType: OrderType!
  percent: Float!
  price: Float
  stopPrice: Float
}

input OrderSetInput {
  id: ID!
}

input CreateOrderSetInput {
  groupId: ID!
  description: String

  # TODO: What else?
}

input UpdateOrderSetInput {
  orderSetId: ID!
  description: String!

  # TODO: What else?
}

input DeleteOrderSetInput {
  orderSetId: ID!
}

input GroupOrderSetsInput {
  groupId: ID!
}

###########################
# GroupMembership extension
###########################
extend type GroupMembership @key(fields: "id") {
  id: ID! @external
  orders: [Order!]!
}

###########################
# Enums
###########################
enum OrderSide {
  BUY
  SELL
}

enum OrderType {
  MARKET
  LIMIT
}

scalar DateTime

extend type Query {
  orderSet(input: OrderSetInput!): OrderSet
  groupOrderSets(input: GroupOrderSetsInput!): [OrderSet!]

  binanceCurrencies: [BinanceCurrency!]!
  bitmexCurrencies: [BitmexCurrency!]!
}

extend type Mutation {
  createOrderSet(input: CreateOrderSetInput!): OrderSet
  updateOrderSet(input: UpdateOrderSetInput!): OrderSet

  cancelOrder(input: CancelOrderInput!): Order

  createExchangeAccount(input: CreateExchangeAccountInput!): ExchangeAccount
}

###################
# Order
###################
type Order @key(fields: "id") {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  membership: GroupMembership!
  orderSet: OrderSet!
  side: OrderSide
  orderType: OrderType
  price: Float
  quantity: Float
  stopPrice: Float
  symbol: String!
  lastTimestamp: DateTime!
}

input CancelOrderInput {
  orderId: String!
}

###################
# OrderSet
###################
type OrderSet @key(fields: "id") {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  description: String!
  orders: [Order!]!
  orderSide: OrderSide
  orderType: OrderType
  percent: Float!
  price: Float
  stopPrice: Float
}

input OrderSetInput {
  id: ID!
}

input CreateOrderSetInput {
  groupId: ID!
  symbol: String!
  exchange: Exchange!
  description: String
  side: OrderSide!
  orderType: OrderType!
  price: Float
  stopPrice: Float
  percent: Float
}

input UpdateOrderSetInput {
  orderSetId: ID!
  description: String!
  price: Float
  stopPrice: Float
}

input GroupOrderSetsInput {
  groupId: ID!
}

###########################
# ExchangeAccount
###########################

type ExchangeAccount @key(fields: "id") {
  id: ID!
  active: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
  exchange: Exchange!
  membership: GroupMembership!
  apiKey: String!
  apiSecret: String!
}

input CreateExchangeAccountInput {
  exchange: Exchange!
  membershipId: ID!
  apiKey: String!
  apiSecret: String!
}

###########################
# BitmexCurrency
###########################

type BitmexCurrency @key(fields: "id") {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  symbol: String!
  underlying: String!
  active: Boolean!
  fractionalDigits: Int
  lastPrice: Float
  markPrice: Float
  tickSize: Float
}

###########################
# BinanceCurrency
###########################

type BinanceCurrency @key(fields: "id") {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  symbol: String!
  lastPrice: Float
  openPrice: Float
  highPrice: Float
  lowPrice: Float
  priceChange: Float
  priceChangePercent: Float
}

###########################
# GroupMembership extension
###########################
extend type GroupMembership @key(fields: "id") {
  id: ID! @external
  orders: [Order!]!
  exchangeAccounts: [ExchangeAccount!]!
}

###########################
# Enums
###########################
enum OrderSide {
  BUY
  SELL
}

enum OrderType {
  MARKET
  LIMIT
}

enum Exchange {
  BINANCE
  BITMEX
}